#!/bin/bash

direction=${1:-horizontal}

function hc() {
    herbstclient "$@"
}

spawn_with_rules() {(
    herbstclient rule once pid=$BASHPID maxage=10 "${RULES[@]}"
    exec "$@"
    ) &
}

case $direction in
    "horizontal")
        LAYOUT="(split horizontal:0.76:0 (clients max:0) (split vertical:0.9:0 (clients vertical:0) (clients vertical:0)))"
        ;;
    "vertical")
        LAYOUT="(split vertical:0.65:0 (clients vertical:0) (clients grid:0))"
        ;;
    *)
        echo "Unknown direction $direction"
        exit 1
        ;;
esac

PROJECT=$(ls ${HOME}/src | dmenu -p "Project ($direction): ")
[[ -z $PROJECT ]] && echo "No project" && exit 1
DIR="${HOME}/src/${PROJECT}"
[[ ! -d $DIR ]] && echo "Project '$PROJECT' not found." && exit 2


# temporary simplications
atom "$DIR"
exit 0


TAG=$(hc tag_status | tr '\t' '\n' | sed -n 's/^#//p')

hc load "$TAG" "$LAYOUT"
renametag "$PROJECT"

cd "$DIR"

RULES=( index=0 focus=on )
spawn_with_rules atom "$DIR"

#SUBL_PROJ="${HOME}/.config/sublime-text-3/Projects/${PROJECT}.sublime-project"
#if [ -e $SUBL_PROJ ]; then
#    spawn_with_rules subl --project $SUBL_PROJ
#else
#    spawn_with_rules subl "$DIR"
#fi

case $direction in
    "horizontal")
        RULES=( index=10 focus=off )
        spawn_with_rules urxvt
        spawn_with_rules urxvt
        RULES=( index=11 focus=off )
        spawn_with_rules urxvt
        ;;
    "vertical")
        RULES=( index=1 focus=off )
        spawn_with_rules urxvt
        spawn_with_rules urxvt
        spawn_with_rules urxvt
        spawn_with_rules urxvt
        ;;
esac
